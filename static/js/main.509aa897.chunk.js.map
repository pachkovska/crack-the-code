{"version":3,"sources":["images/logo.png","components/menuItem/MenuItem.jsx","components/header/Menu.jsx","components/header/Logo.jsx","components/header/Header.jsx","components/content/SearchBar.jsx","components/content/Snippets.jsx","components/content/Content.jsx","components/footer/FooterMenu.jsx","components/footer/Contact.jsx","components/footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuItem","props","className","onClick","openMenu","menuItemTitle","Menu","menuItems","map","menuItem","title","Logo","src","logo","alt","Header","SearchBar","type","onChange","handleChange","placeholder","showSearch","require","Snippets","console","log","snippets","languages","find","item","language","snippet","key","body","Content","FooterMenu","Contact","target","href","Footer","App","header","isOpened","footer","useState","searchValue","setSearchValue","snipets","e","value","alert","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.509aa897.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.878b2661.png\";","import React from \"react\";\n\nfunction MenuItem(props) {\n  return (\n    <div className=\"menuItem\" onClick={() => props.openMenu()}>\n      {props.menuItemTitle}\n    </div>\n  );\n}\n\nexport default MenuItem;\n","import React from \"react\";\nimport MenuItem from \"../menuItem/MenuItem\";\n\nfunction Menu(props) {\n  return (\n    <div className=\"menu\">\n      {props.menuItems.map((menuItem) => (\n        <MenuItem menuItemTitle={menuItem.title} openMenu={props.openMenu} />\n      ))}\n    </div>\n  );\n}\n\nexport default Menu;\n","import React from \"react\";\nimport logo from \"../../images/logo.png\";\n\nfunction Logo() {\n  return (\n    <div className=\"logo\">\n      <img className=\"logo-image\" src={logo} alt=\"logo image\" />\n      <p className=\"logo-name\">CrackTheCode</p>\n    </div>\n  );\n}\n\nexport default Logo;\n","import React from \"react\";\nimport Menu from \"./Menu\";\nimport Logo from \"./Logo\";\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <Logo />\n      <Menu menuItems={props.menuItems} openMenu={props.openMenu} />\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction SearchBar(props) {\n  return (\n    <div className=\"searchBar\">\n      <input\n        type=\"text\"\n        onChange={props.handleChange}\n        placeholder=\"Search ...\"\n      ></input>\n      <div className=\"searchBar-button\" onClick={props.showSearch}>\n        Search\n      </div>\n    </div>\n  );\n}\n\nexport default SearchBar;\n","import React from \"react\";\nconst _ = require(\"lodash\");\n\nfunction Snippets(props) {\n  return (\n    <div className=\"snippets\">\n      {console.log(\n        props.snippets.languages.find((item) => item.language === \"JavaScript\")\n          .snippets\n      )}\n      {props.snippets.languages\n        .find((item) => item.language === \"JavaScript\")\n        .snippets.map((snippet) => (\n          <div className=\"snippets-single\" key={snippet.title}>\n            <div className=\"snippets-single-title\">\n              {/* <strong>{_.get(snippet, title, 'No title'}</strong> */}\n              <strong>{snippet.title}</strong>\n            </div>\n            <div className=\"snippets-single-body\">{snippet.body}</div>\n          </div>\n        ))}\n    </div>\n  );\n}\n\nexport default Snippets;\n","import React from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport Snippets from \"./Snippets\";\n\nfunction Content(props) {\n  return (\n    <div className=\"content\">\n      <SearchBar\n        showSearch={props.showSearch}\n        handleChange={props.handleChange}\n      />\n      <Snippets snippets={props.snippets} />\n    </div>\n  );\n}\n\nexport default Content;\n","import React from \"react\";\nimport MenuItem from \"../menuItem/MenuItem\";\n\nfunction FooterMenu(props) {\n  return (\n    <div className=\"footerMenu\">\n      {props.menuItems.map((menuItem) => (\n        <MenuItem menuItemTitle={menuItem.title} />\n      ))}\n    </div>\n  );\n}\n\nexport default FooterMenu;\n","import React from \"react\";\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n      <div>Email us @ connect@ctc.com</div>\n      <div>\n        <span className=\"Connect-links\">Connect with app owner: </span>\n        <a\n          className=\"social-icon\"\n          target=\"_blank\"\n          href=\"https://www.linkedin.com/in/yuliatuzov/\"\n        >\n          <i className=\"fa fa-linkedin-square fa-lg\"></i>\n        </a>\n        <a\n          className=\"social-icon\"\n          target=\"_blank\"\n          href=\"https://github.com/pachkovska\"\n        >\n          <i className=\"fa fa-github-square fa-lg\"></i>\n        </a>\n        <a\n          className=\"social-icon\"\n          target=\"_blank\"\n          href=\"https://twitter.com/YuliaPachkovska\"\n        >\n          <i className=\"fa fa-twitter-square fa-lg\"></i>\n        </a>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from \"react\";\nimport FooterMenu from \"./FooterMenu\";\nimport Contact from \"./Contact\";\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n      <FooterMenu menuItems={props.menuItems} />\n      <footer>\n        <p className=\"copyright-text\">Copyright &copy; CrackTheCode 2020</p>\n      </footer>\n      <Contact />\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Content from \"./components/content/Content\";\nimport Footer from \"./components/footer/Footer\";\n\nfunction App() {\n  const menuItems = {\n    header: [\n      { title: \"Languages\", isOpened: false },\n      { title: \"Categories\", isOpened: false },\n      { title: \"Create Snippet Board\", isOpened: false },\n    ],\n    footer: [\n      { title: \"About\", isOpened: false },\n      { title: \"Privacy Policy\", isOpened: false },\n      { title: \"Terms and Conditions\", isOpened: false },\n    ],\n  };\n\n  const snippets = {\n    languages: [\n      {\n        language: \"JavaScript\",\n        snippets: [\n          {\n            title: \"Deploy React App to github pages\",\n            body:\n              \"npm install gh-pages \\n\" +\n              'add homepage url into the package.json file \\n add the following scripts under \"scripts\" into same file \"predeploy\": \"npm run build\" and \"deploy\": \"gh-pages -d build\" \\n run command `npm run deploy`',\n          },\n          {\n            title: \"Create SearchBar React Component\",\n            body:\n              'function SearchBar() {return (<div className=\"searchBar\"><input type=\"text\" placeholder=\"Search ..\"></input></div>) \\n} export default SearchBar;',\n          },\n          {\n            title: \"Create Javascript Class\",\n            body:\n              'export default class Page { \\n constructor() {\\n { this.title = \"My Page\" \\n} \\n method(argument) { \\n <do stuff like in a function...>; \\n} \\n}',\n          },\n        ],\n      },\n      { language: \"Bash\", snipets: [{ title: \"Secure Shell Copy\", body: \"\" }] },\n      {\n        language: \"SQL\",\n        snipets: [\n          {\n            title: \"CASE WHEN STATEMENT\",\n            body:\n              \"SELECT CASE WHEN condition1 THEN result1 WHEN condition2 THEN result2 WHEN conditionN THEN resultN ELSE result END as column_name FROM dual\",\n          },\n        ],\n      },\n      {\n        language: \"Python\",\n        snipets: [{ title: 'for x in \"banana\": print(x)', body: \"\" }],\n      },\n    ],\n  };\n\n  // const [isOpened, setIsOpen] = useState(false);\n\n  // const showMenu = () => {\n  //   isOpened ? <Dropdown /> : null\n  // }\n\n  // const showSearch = () => {\n  //   alert(\n  //     \"You have searched for some random code snippet that was never created!\"\n  //   );\n  // };\n\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const handleChange = (e) => {\n    setSearchValue(e.target.value);\n  };\n\n  const showSearch = () => {\n    alert(\n      `You have searched for \"${searchValue}\" code snippet but you don't have one!`\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <Header menuItems={menuItems.header} />\n      <Content\n        snippets={snippets}\n        handleChange={(e) => handleChange(e)}\n        showSearch={() => showSearch()}\n      />\n      <Footer menuItems={menuItems.footer} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}