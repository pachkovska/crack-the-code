{"version":3,"sources":["images/logo.png","components/menuItem/MenuItem.jsx","components/menu/Menu.jsx","components/logo/Logo.jsx","components/header/Header.jsx","components/searchBar/SearchBar.jsx","components/snippets/Snippets.jsx","components/content/Content.jsx","components/footerMenu/FooterMenu.jsx","components/contact/Contact.jsx","components/footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuItem","props","className","menuItemTitle","Menu","menuItems","header","map","menuItem","title","Logo","src","logo","alt","Header","SearchBar","type","placeholder","Snippets","snippets","languages","snippet","body","Content","FooterMenu","footer","Contact","target","href","Footer","App","language","snipets","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,4SCQ5BC,MANf,SAAkBC,GAChB,OACA,yBAAKC,UAAU,aAAaD,EAAME,gB,MCiBrBC,MAhBf,SAAcH,GACZ,OACE,yBAAKC,UAAU,QAETD,EAAMI,UAAUC,OAAOC,KAAI,SAAAC,GAAQ,OAE/B,kBAAC,EAAD,CACEL,cAAeK,EAASC,a,sBCCzBC,MATf,WACE,OACI,yBAAKR,UAAU,QACb,yBAAKA,UAAU,aAAaS,IAAKC,IAAMC,IAAI,eAC3C,uBAAGX,UAAU,aAAb,kB,MCQOY,MAXf,SAAgBb,GACd,OACE,yBAAKC,UAAU,UACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEG,UAAWJ,EAAMI,c,YCEVU,MATf,WAEI,OACI,yBAAKb,UAAU,aACZ,2BAAOc,KAAK,OAAOC,YAAY,iB,MCW3BC,MAff,SAAkBjB,GACd,OACI,yBAAKC,UAAU,YAEXD,EAAMkB,SAASC,UAAU,GAAGD,SAASZ,KAAI,SAAAc,GAAO,OAC5C,yBAAKnB,UAAU,mBACX,yBAAKA,UAAU,yBAAwB,gCAASmB,EAAQZ,QACxD,yBAAKP,UAAU,wBAAwBmB,EAAQC,YCMpDC,MAXf,SAAiBtB,GACf,OACE,yBAAKC,UAAU,WACX,kBAAC,EAAD,MACA,kBAAC,EAAD,CACEiB,SAAUlB,EAAMkB,aCSXK,MAhBf,SAAoBvB,GAClB,OACE,yBAAKC,UAAU,cAEXD,EAAMI,UAAUoB,OAAOlB,KAAI,SAAAC,GAAQ,OAE/B,kBAAC,EAAD,CACEL,cAAeK,EAASC,a,MCavBiB,MApBf,WACE,OACE,yBAAKxB,UAAU,WACX,2DACI,6BACI,0BAAMA,UAAU,iBAAhB,6BACA,uBAAGA,UAAU,cAAcyB,OAAO,SAASC,KAAK,2CAC5C,uBAAG1B,UAAU,iCAEjB,uBAAGA,UAAU,cAAcyB,OAAO,SAASC,KAAK,iCAC5C,uBAAG1B,UAAU,+BAEjB,uBAAGA,UAAU,cAAcyB,OAAO,SAAUC,KAAK,uCAC7C,uBAAG1B,UAAU,mC,MCGlB2B,MAdf,SAAgB5B,GACd,OACE,yBAAKC,UAAU,UACX,kBAAC,EAAD,CACEG,UAAWJ,EAAMI,YAEnB,gCACI,uBAAGH,UAAU,kBAAb,qCAEJ,kBAAC,EAAD,QC4CO4B,MApDf,WAEE,IAAMzB,EAAY,CAChBC,OAAQ,CACN,CAACG,MAAO,aACR,CAACA,MAAO,cACR,CAACA,MAAO,yBAEVgB,OAAQ,CACN,CAAChB,MAAO,SACR,CAACA,MAAO,kBACR,CAACA,MAAO,0BA0BZ,OACE,yBAAKP,UAAU,OACb,kBAAC,EAAD,CACEG,UAAWA,IAEb,kBAAC,EAAD,CACEc,SA5BW,CACfC,UAAW,CACT,CAACW,SAAU,aACVZ,SAAU,CACR,CAACV,MAAO,mCACPa,KAAM,iOACN,CAACb,MAAO,mCACRa,KAAM,qJACN,CAACb,MAAO,0BACRa,KAAM,sJAGV,CAACS,SAAU,OACTC,QAAS,CACP,CAACvB,MAAO,oBACPa,KAAM,UAeX,kBAAC,EAAD,CACEjB,UAAWA,MCxCC4B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1862bc66.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.878b2661.png\";","import React from 'react';\n\nfunction MenuItem(props) {\n  return (\n  <div className=\"menu-item\">{props.menuItemTitle}</div>\n  );\n}\n\nexport default MenuItem;\n\n","import React from 'react';\nimport MenuItem from '../menuItem/MenuItem';\n\nimport './Menu.css';\n\nfunction Menu(props) {\n  return (\n    <div className=\"menu\">\n        { \n          props.menuItems.header.map(menuItem => \n            (\n              <MenuItem \n                menuItemTitle={menuItem.title}\n              />\n            )\n          )\n        }              \n    </div>\n  );\n}\n\nexport default Menu;","import React from 'react';\nimport logo from '../../images/logo.png';\nimport './Logo.css';\n\nfunction Logo() {\n  return (\n      <div className=\"logo\">\n        <img className=\"logo-image\" src={logo} alt=\"logo image\"/>\n        <p className=\"logo-name\">CrackTheCode</p>\n      </div>\n  );\n}\n\nexport default Logo;","import React from 'react';\nimport Menu from '../menu/Menu';\nimport Logo from '../logo/Logo';\nimport './Header.css';\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <Logo />\n      <Menu \n        menuItems={props.menuItems}\n      />\n    </div>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport './SearchBar.css';\n\nfunction SearchBar() {\n\n    return (\n        <div className=\"searchBar\">\n           <input type=\"text\" placeholder=\"Search ...\"></input>\n        </div>\n    )\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Snippets.css';\n\nfunction Snippets(props) {\n    return (\n        <div className=\"snippets\">\n        {\n            props.snippets.languages[0].snippets.map(snippet => (\n                <div className=\"snippets-single\">\n                    <div className=\"snippets-single-title\"><strong>{snippet.title}</strong></div>\n                    <div className=\"snippets-single-body\">{snippet.body}</div>\n                </div>\n            ))\n        }\n        </div>\n    )\n}\n\nexport default Snippets;","import React from 'react';\nimport './Content.css';\nimport SearchBar from '../searchBar/SearchBar';\nimport Snippets from '../snippets/Snippets';\n\nfunction Content(props) {\n  return (\n    <div className=\"content\">\n        <SearchBar />\n        <Snippets\n          snippets={props.snippets}\n        />\n    </div>\n  );\n}\n\nexport default Content;","import React from 'react';\nimport MenuItem from '../menuItem/MenuItem';\n\nfunction FooterMenu(props) {\n  return (\n    <div className=\"footerMenu\">\n      {\n        props.menuItems.footer.map(menuItem => \n          (\n            <MenuItem \n              menuItemTitle={menuItem.title}\n            />\n          )\n        )\n      }     \n    </div>\n  );\n}\n\nexport default FooterMenu;","import React from 'react';\nimport './Contact.css';\n\nfunction Contact() {\n  return (\n    <div className=\"contact\">\n        <div>Email us @ connect@ctc.com</div>\n            <div>\n                <span className=\"Connect-links\">Connect with app owner:  </span>\n                <a className=\"social-icon\" target=\"_blank\" href=\"https://www.linkedin.com/in/yuliatuzov/\">\n                    <i className=\"fa fa-linkedin-square fa-lg\"></i>\n                </a>\n                <a className=\"social-icon\" target=\"_blank\" href=\"https://github.com/pachkovska\">\n                    <i className=\"fa fa-github-square fa-lg\"></i>\n                </a>\n                <a className=\"social-icon\" target=\"_blank\"  href=\"https://twitter.com/YuliaPachkovska\">\n                    <i className=\"fa fa-twitter-square fa-lg\"></i>\n                </a>                       \n            </div> \n    </div>\n  );\n}\n\nexport default Contact;","import React from 'react';\nimport FooterMenu from '../footerMenu/FooterMenu';\nimport Contact from '../contact/Contact';\nimport './Footer.css';\n\nfunction Footer(props) {\n  return (\n    <div className=\"footer\">\n        <FooterMenu \n          menuItems={props.menuItems}\n        />\n        <footer>\n            <p className=\"Copyright-text\">Copyright &copy; CrackTheCode 2020</p>\n        </footer> \n        <Contact />\n    </div>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/header/Header';\nimport Content from './components/content/Content';\nimport Footer from './components/footer/Footer';\n\nfunction App() {\n\n  const menuItems = {\n    header: [\n      {title: 'Languages'},\n      {title: 'Categories'},\n      {title: 'Create Snippet Board'},\n    ],\n    footer: [\n      {title: 'About'},\n      {title: 'Privacy Policy'},\n      {title: 'Terms and Conditions'},\n    ]\n  };\n\n  const snippets = {\n    languages: [\n      {language: 'JavaScript',\n       snippets: [\n         {title: 'Deploy React App to github pages',\n          body: 'npm install gh-pages \\n'+ 'add homepage url into the package.json file \\n add the following scripts under \"scripts\" into same file \"predeploy\": \"npm run build\" and \"deploy\": \"gh-pages -d build\" \\n run command `npm run deploy`'},\n          {title: 'Create SearchBar React Component',\n          body: 'function SearchBar() {return (<div className=\"searchBar\"><input type=\"text\" placeholder=\"Search ..\"></input></div>) \\n} export default SearchBar;'},\n          {title: 'Create Javascript Class',\n          body: 'export default class Page { \\n constructor() {\\n { this.title = \"My Page\" \\n} \\n method(argument) { \\n <do stuff like in a function...>; \\n} \\n}'}\n       ]\n      }, \n      {language: 'Bash',\n        snipets: [\n          {title: 'Secure Shell Copy',\n           body: ''\n          }\n        ]\n      }\n    ]\n  }\n\n  return (\n    <div className=\"App\">\n      <Header \n        menuItems={menuItems}\n      />\n      <Content \n        snippets={snippets}\n      />\n      <Footer \n        menuItems={menuItems}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}